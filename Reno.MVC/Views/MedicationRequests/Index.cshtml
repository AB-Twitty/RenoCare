@using Reno.MVC.Services.Base;

@inject IClient _client;

@{
    ViewData["Title"] = "Medication Requests";
}


@using Reno.MVC.Services.Base.Contracts;
@inject ILocalStorageService _localStorageService;


@{
    string access_token = _localStorageService.GetCurrentToken();

    var MedicationTypes = (await _client.MedicationRequestTypesAsync(null,true)).Data.OrderBy(x => x.Id);
    var MedicationTypesSelect = new SelectList(MedicationTypes, "Name", "Name");

    var MedicationStatus = (await _client.MedicationRequestStatusListAsync(null)).Data.OrderBy(x => x.Id);
    var MedicationStatusSelect = new SelectList(MedicationStatus, "Name", "Name");
}

<div class="wrapper wrapper-content animated fadeInRight shadow">
    <div class="row wrapper  white-bg page-heading  mx-0 ">
        <div class="col-md-12">
            <h2 class="col-md-9">Medication Requests</h2>
            <div class="col-md-3" style="float:right">
                <ol class="breadcrumb">
                    <li>
                        <a asp-action="index" asp-controller="Home">Home</a>
                    </li>
                    <li class="active">
                        <strong>Mediaction Requests</strong>
                    </li>
                </ol>
            </div>
        </div>
        <div class="col-lg-2">
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins  p-10">
     
                <div class="ibox-content" style="padding: 15px 20px 0px 20px;">
                    <div class="row">

                        <form id="FilterMedicationRequests">
                            <div class="ibox float-e-margins">
                                <div class="ibox-title">
                                    <h5>Filter Section</h5>
                                    <div class="ibox-tools">
                                        <a class="collapse-link">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>
                                    </div>
                                </div>

                                <div class="ibox-content">

                                    <div class="row mb-15">
                                        <div class="col-md-6">
                                            <label class="control-label col-md-12">Patient Name</label>
                                            <div class="col-md-12">
                                                <input type="text" class="m-b form-control" placeholder="Enter Patient Name..." />
                                            </div>
                                        </div>

                                        @if (User.IsInRole("Admin"))
                                        {
                                            <div class="col-md-6">
                                                <label class="control-label col-md-12">Dialysis Unit Name</label>
                                                <div class="col-md-12">
                                                    <input type="text" class="m-b form-control" placeholder="Enter Dialysis Unit Name..." />
                                                </div>
                                            </div>
                                        }
                                        else if (User.IsInRole("HealthCare"))
                                        {
                                            <input disabled style="display:none;" type="text" class="m-b form-control" placeholder="Enter Dialysis Unit Name..." />
                                        }

                                    </div>

                                    <div class="row mb-15">

                                        <div class="col-md-6">
                                            <label class="control-label col-md-12">Medication Requests Status</label>
                                            <div class="col-md-12">
                                                <select multiple class="multiple-select" asp-items="@MedicationStatusSelect"
                                                        placeholder="Select Medication Request Status..." data-search="false">
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="control-label col-md-12">Medication Requests Types</label>
                                            <div class="col-md-12">
                                                <select multiple class="multiple-select" asp-items="@MedicationTypesSelect"
                                                        placeholder="Select Medication Reuest Types..." data-search="false">
                                                </select>
                                            </div>
                                        </div>
                                        
                                    </div>

                                    <div class="row mb-15">
                                        <div class="col-lg-12">
                                            <div class="ibox float-e-margins">
                                                <div class="ibox-title">

                                                    <div class="col-md-12 text-end">
                                                        <button class=" btn btn-danger" type="reset" id="ResetFilter">Reset</button>
                                                        <button class=" btn btn-primary" id="SubmitFilter" type="button">Search</button>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <hr style="margin: 0;" />
                                </div>
                            </div>
                        </form>

                        <table id="MedicationRequestTable" class="table  table-striped  table-bordered table-hover display">
                            <thead>
                                <tr>
                                    
                                    <th>Actions</th>
                                    <th>Patient Name</th>
                                    <th>Dialysis Unit Name</th>
                                    <th>Treatment</th>
                                    <th>Status</th>
                                    <th>Booking Type</th>
                                    <th>Session Date</th>
                                    <th>Session Time</th>

                                </tr>
                            </thead>
                        </table>

                        <div style="float:left; padding-left:20px;">
                            @foreach (var status in MedicationStatus)
                            {
                                <span style="color:#fff; background-color: @status.LabelClass;" 
                                      class="label" id="@status.Name">@status.Name</span>
                                <label class="control-label" style="font-size:12px;font-weight:normal;">@status.Description</label>
                                <br />
                            }
                            
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatables/js/datatables.bootstrap4.min.js"></script>

    <script>
        $('document').ready(function () {
            var Table = $('#MedicationRequestTable').DataTable({
                pageLength: 25,
                ordering: true,
                scrollX: true,
                ajax: {
                    url: "/MedicationRequests",
                    type: "POST",
                    datatype: "json"
                },
                serverSide: true,
                filter: true,
                processing: false,
                order: [[1, 'asc']],
                columns: [
                    {
                        data: "reportId",
                        name: "ReportId",
                        render: function (data, type, row, meta) {
                            if (@User.IsInRole("Admin").ToString().ToLower()) {
                                if (data != null && row.status == "Completed")
                                    return `<a href="/Reports/${row.reportId}" target="_blank"
                                                   class="btn btn-default">View Report</a>`;
                                else 
                                    return "N/A";
                            }
                                

                            if (data == null && row.status == "Completed")
                                return `<a href="/Reports/Create/${row.id}" target="_blank" 
                                           class="btn btn-primary">Create</a>`;

                            else if (data != null && row.status == "Completed")
                                return `<a href="/Reports/${row.reportId}" target="_blank"
                                           class="btn btn-default">View Report</a>`;

                            else if (row.status == "Pending")
                                return `<a href="/Medication/Request/Details/${row.id}" target="_blank" class="btn btn-default" style="padding-right:17.5px;padding-left:17.5px;">Previous Reports</a>
                                                    <div><button data-request-id=${row.id} class="btn btn-primary" style="margin-right: 10px;">Accept</button>
                                                    <button data-request-id=${row.id} class="btn btn-danger">Reject</button></div>`;
                            
                            else if (row.status == "Upcoming")
                                return `<a href="/Medication/Request/Details/${row.id}" target="_blank" class="btn btn-default" style="padding - right: 17.5px;padding - left: 17.5px;">Previous Reports</a>`;

                            else if (row.status == "Cancelled" || row.status == "Rejected")
                                return "N/A";
                        },
                        sortable: false,
                        searchable: false
                    },
                    { data: "patientName", name: "PatientName" },
                    { 
                        data: "dialysisUnitName", 
                        name: "DialysisUnitName", 
                        visible: @User.IsInRole("Admin").ToString().ToLower(),
                    },
                    {
                        data: "treatment",
                        name: "Treatment",
                        sortable: false
                    },
                    { 
                        data: "status", 
                        name: "Status", 
                        render: function (data, type, row, meta) {
                            var bgColor = $('#' + data).css('background-color');

                            var label = `<span style="color:#fff; background-color: ${bgColor};"
                                    class="label">${data}</span>`

                            return label;
                        },
                        sortable: false
                    },
                    { 
                        data: "type", 
                        name: "Type",
                        sortable: false
                    },
                    { 
                        data: "date",
                        name: "Date",
                        render: (data, type, row, meta) => formatDateToCustomString(data)
                    },
                    { 
                        data: "time", 
                        name: "Time"
                    }
                ],
                "fnInitComplete": function () {
                    addSearchControl();
                }
            });

            function addSearchControl() {
                $("#SubmitFilter").on('click', function () {
                    // Initialize an empty search object
                    var searchObject = {};

                    // Iterate over input fields within the form
                    $("#FilterMedicationRequests input").each(function (index) {
                        console.log(this, index);
                        var inputValue = $(this).val();
                        console.log(inputValue);
                        if (inputValue !== "") {
                            // Map input value to the corresponding column name
                            var columnIndex = getColumnIndexForInput(index);
                            searchObject[columnIndex] = inputValue;
                        }
                    });

                    // Apply search filters to the DataTable
                    for (var index in searchObject) {
                        console.log(index);
                        Table.column(index).search(searchObject[index]);
                    }

                    Table.draw();
                });
            }


            $("#ResetFilter").on("click", () => {
                Table.columns().search("").draw();
            })

            // Helper function to map input index to column name
            function getColumnIndexForInput(index) {
                switch (index) {
                    case 0: return '1';
                    case 1: return '2';
                    case 2: return '4';
                    case 3: return '5';
                    // Add mappings for other input fields as needed
                    default: return ""; // Return an empty string for unmapped inputs
                }
            }

            function formatDateToCustomString(date_string) {
                var date = new Date(date_string);
                const months = [
                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
                ];

                const day = date.getDate();
                const month = months[date.getMonth()];
                const year = date.getFullYear();

                return `${day}-${month}-${year}`;
            }


            $('#MedicationRequestTable tbody').on('click', 'button.btn-primary', function () {
                var requestId = $(this).data('request-id');

                $.ajax({
                    url: 'http://localhost:6982/Api/V1/Medication/Request/Status-Update',
                    type: 'POST',
                    headers: {
                        "Authorization": `Bearer @access_token`
                    },
                    data: JSON.stringify({ status: "Upcoming", id: requestId }),
                    contentType: 'application/json',
                    success: function (response) {
                        console.log('Request successful:', response);
                        Table.ajax.reload();
                    },
                    error: function (error) {
                        console.error('Request failed:', error);
                    }
                });
            });

            $('#MedicationRequestTable tbody').on('click', 'button.btn-danger', function () {
                var requestId = $(this).data('request-id');

                $.ajax({
                    url: 'http://localhost:6982/Api/V1/Medication/Request/Status-Update',
                    type: 'POST',
                    headers: {
                        "Authorization": `Bearer @access_token`
                    },
                    data: JSON.stringify({ status: "Rejected", id: requestId }),
                    contentType: 'application/json',
                    success: function (response) {
                        console.log('Request successful:', response);
                        Table.ajax.reload();
                    },
                    error: function (error) {
                        console.error('Request failed:', error);
                    }
                });
            });

            /*setInterval(function () {
                Table.ajax.reload();
            }, 30000);
            */
        });
    </script>
}