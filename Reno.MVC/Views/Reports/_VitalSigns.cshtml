@model ReportIndexVM

@{
    var propertiesToCheck = new[]
    {
        nameof(Model.Report.PreWeight),
        nameof(Model.Report.PostWeight),
        nameof(Model.Report.PreBloodPressure),
        nameof(Model.Report.DuringBloodPressure),
        nameof(Model.Report.PostBloodPressure),
        nameof(Model.Report.DryWeight),
        nameof(Model.Report.HeartRate)
    };

    var initialForm = propertiesToCheck.All(prop => 
        Model.Report.GetType().GetProperty(prop).GetValue(Model.Report) == null);

    var change_to_warning = !initialForm && propertiesToCheck.Any(prop =>
        ViewData.ModelState[$"{nameof(Model.Report)}.{prop}"]?.Errors.Any() ?? false);
}


<div class="form-group">

    <!--Weight-->
    <div>
        <p>
            Weight
            <span class="font-12">- Kg</span>
            <span class="text-danger"> *</span>
        </p>
        <div class="row">

            <!--Pre Weight-->
            <div class="col-md-6">
                <div class="col-md-12" style="display:inline-flex;">
                    <label class="control-label m-r-sm input-decimal" style="padding-top:5px; min-width:55px;">
                        Pre:
                    </label>
                    <input asp-for="@Model.Report.PreWeight" type="text" class="m-b form-control input-decimal" maxlength="5" />
                    
                </div>
                <div class="col-md-12">
                    <span asp-validation-for="@Model.Report.PreWeight" class="text-danger"></span>
                </div>
            </div>

            <!--Post Weight-->
            <div class="col-md-6">
                <div class="col-md-12" style="display:inline-flex;">
                    <label class="control-label m-r-sm input-decimal" style="padding-top:5px; min-width:55px;">
                        Post:
                    </label>
                    <input id="postWeight" asp-for="@Model.Report.PostWeight" type="text" class="m-b form-control input-decimal" maxlength="5" />
                    
                </div>
                <div class="col-md-12">
                    <span asp-validation-for="@Model.Report.PostWeight" class="text-danger"></span>
                </div>
            </div>

        </div>
    </div>
    <br />

    <!-- Blood Pressure-->
    <div>
        <p>
             Blood Pressure
            <span class="font-12">- mmHg</span>
            <span class="text-danger"> *</span>
        </p>
        <div class="row">

            <!--Pre-->
            <div class="col-md-4">
                <div class="col-md-12" style="display:inline-flex;">
                    <label class="control-label m-r-sm pre-lable" style="padding-top:5px; min-width:55px;">
                        Pre:
                    </label>
                    <div style="display:inline-flex; min-width:120px; max-width:200px;">
                        <input id="preBloodPressure" asp-for="@Model.Report.PreBloodPressure" hidden />
                        @{
                            var isPreValid = !ViewData
                                .ModelState[nameof(Model.Report) + "." + nameof(Model.Report.PreBloodPressure)]
                                ?.Errors.Any() ?? true;
                        }

                        <input value="@Model.Report.PreBloodPressure?.Split('/')[0]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isPreValid ? "" : "input-validation-error")"
                               maxlength="3" id="preSystolic"/>
                        <div style="font-size:x-large; margin: 0 5px;">/</div>
                        <input value="@Model.Report.PreBloodPressure?.Split('/')[1]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isPreValid ? "" : "input-validation-error")"
                               maxlength="3" id="preDiastolic"/>
                    </div>
                    
                </div>
                <div class="col-md-12">
                    <span asp-validation-for="@Model.Report.PreBloodPressure" class="text-danger"></span>
                </div>
            </div>

            <!--During-->
            <div class="col-md-4 During">
                <div class="col-md-12" style="display:inline-flex;">
                    <label class="control-label m-r-sm During-lable" style="padding-top:5px; min-width:55px;">
                        During:
                    </label>
                    <div style="display:inline-flex; min-width:120px; max-width:200px;">
                        <input id="duringBloodPressure" asp-for="@Model.Report.DuringBloodPressure" hidden />
                        @{
                            var isDuringValid = !ViewData
                                .ModelState[nameof(Model.Report) + "." + nameof(Model.Report.DuringBloodPressure)]
                                ?.Errors.Any() ?? true;
                        }
                        <input value="@Model.Report.DuringBloodPressure?.Split('/')[0]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isDuringValid ? "" : "input-validation-error")"
                               maxlength="3" id="duringSystolic" />
                        <div style="font-size:x-large; margin: 0 5px;">/</div>
                        <input value="@Model.Report.DuringBloodPressure?.Split('/')[1]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isDuringValid ? "" : "input-validation-error")"
                               maxlength="3" id="duringDiastolic" />
                    </div>
                    
                </div>
                <div class="col-md-12 post">
                    <span asp-validation-for="@Model.Report.DuringBloodPressure" class="text-danger"></span>
                </div>
            </div>

            <!--Post-->
            <div class="col-md-4">
                <div class="col-md-12 post" style="display:inline-flex;">
                    <label class="control-label m-r-sm post-lable" style="padding-top:5px; min-width:55px;">
                        Post:
                    </label>
                    <div style="display:inline-flex; min-width:120px; max-width:200px;">
                        <input id="postBloodPressure" asp-for="@Model.Report.PostBloodPressure" hidden />
                        @{
                            var isPostValid = !ViewData
                                .ModelState[nameof(Model.Report) + "." + nameof(Model.Report.PostBloodPressure)]
                                ?.Errors.Any() ?? true;
                        }
                        <input value="@Model.Report.PostBloodPressure?.Split('/')[0]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isPostValid ? "" : "input-validation-error")"
                               maxlength="3" id="postSystolic" />
                        <div style="font-size:x-large; margin: 0 5px;">/</div>
                        <input value="@Model.Report.PostBloodPressure?.Split('/')[1]" type="text"
                               class="m-b form-control VitalSigns-input input-integer @(isPostValid ? "" : "input-validation-error")"
                               maxlength="3" id="postDiastolic" />
                    </div>
                    
                </div>
                <div class="col-md-12 post">
                    <span asp-validation-for="@Model.Report.PostBloodPressure" class="text-danger"></span>
                </div>
            </div>

        </div>
    </div>
    <br />

    <hr />
    <div class="row">

        <!--Dry Weight-->
        <div class="col-md-6">
            <label class="control-label col-md-12">
                Dry Weight
                <span class=" font-12 control-label">- kg</span>
                <span class="text-danger"> *</span>
            </label>

            <div class="col-md-12">
                <input asp-for="@Model.Report.DryWeight" type="text" class="m-b form-control input-decimal" maxlength="5" />
                <span asp-validation-for="@Model.Report.DryWeight" class="text-danger"></span>
            </div>
        </div>

        <!--Heart Rate-->
        <div class="col-md-6">
            <label class="control-label col-md-12">
                Heart Rate
                <span class=" font-12 control-label">- bpm</span>
                <span class="text-danger"> *</span>
            </label>

            <div class="col-md-12">
                <input asp-for="@Model.Report.HeartRate" type="text" class="m-b form-control input-integer" maxlength="3" />
                <span asp-validation-for="@Model.Report.HeartRate" class="text-danger"></span>
            </div>
        </div>

    </div>
</div>


<!--Tabs Buttons-->
<div class="row">
    <div class="ibox float-e-margins">
        <div class="ibox-title ibox-title-reports">
            <div class="col-md-6">
                <button data-toggle="tab" id="prev_to_healthStatus" href="#tab-2" class="tab7 btn btn-secondary">Previous</button>
            </div>
            <div class="col-md-6 text-end">
                <button data-toggle="tab" id="nxt_to_treatmentOutcomes" href="#tab-4" class="tab9 btn btn-primary">Next</button>
            </div>
        </div>
    </div>

</div>

<script>
    $("#prev_to_healthStatus").on('click', function () {
        $('.nav-tabs a[href="' + "#tab-2" + '"]').tab('show');
    });

    $("#nxt_to_treatmentOutcomes").on('click', function () {
        $('.nav-tabs a[href="' + "#tab-4" + '"]').tab('show');
    });

    $('#main-form').on('submit', function () {
        FormatBloodPressureFields("pre");
        FormatBloodPressureFields("during");
        FormatBloodPressureFields("post");
    });

    function FormatBloodPressureFields(prefix) {
        var systolic = $("#" + prefix + "Systolic").val();
        var diastolic = $("#" + prefix + "Diastolic").val();
        if (systolic && diastolic)
            $("#" + prefix + "BloodPressure").val(systolic + '/' + diastolic);
    }

    var init = @initialForm.ToString().ToLower();
    if (!init) {
        const $tabIcon = $('.nav-tabs a[href="#tab-3"] i');
        $tabIcon.removeClass('label label-danger fa fa-window-close').addClass(@change_to_warning.ToString().ToLower()
            ? 'label label-danger fa fa-window-close' : 'label label-primary fa fa-check');
    }

</script>